[["index.html", "AnVIL Instructor Guide About this Book", " AnVIL Instructor Guide November, 2021 About this Book This book is a guide to help instructors who are new to AnVIL. It helps these users set up their accounts and start developing content on the AnVIL platform. "],["introduction.html", "Chapter 1 Introduction 1.1 What Is AnVIL? 1.2 Does AnVIL Cost Money? 1.3 Where Can I Get Help? 1.4 Activate scroll_highlight Feature", " Chapter 1 Introduction 1.1 What Is AnVIL? AnVIL is NHGRI’s Genomic Data Science Analysis, Visualization, and Informatics Lab-Space. It provides a platform for performing genomic data analysis on the cloud. 1.2 Does AnVIL Cost Money? Through AnVIL, you pay for computing resources as you use them. If you’d like to try it out, new users can claim a $300 Google Cloud credit to test out the platform and perform some small analyses. We also provide a cost estimator. 1.3 Where Can I Get Help? Please visit our community support forum at help.anvilproject.org with any questions (or suggestions!) you may have. You can also visit the Getting Started Guide and anvilproject.org/learn for additional resources. 1.4 Activate scroll_highlight Feature Note that some sections of this book cover steps in a lot of detail. When navigating the table of contents, you can click subsection (e.g., 2.2, 4.2) headers a second time to expand the table of contents and enable the scroll_highlight feature. This can help you follow the separate steps within more clearly. "],["overview.html", "Chapter 2 Overview", " Chapter 2 Overview This book is targeted towards people who are teaching a course or workshop on AnVIL. You will find here: Overview – Design philosophy and goals for this guide - is this a good fit for your class? What should you know before you start? Account Setup – Step-by-step instructions to create your first accounts on AnVIL and create your first class Workspace Developing Content – Additional tools to help you customize your class Workspace Class Setup – Step-by-step instructions to help you add students into a class on AnVIL Class Ending – Best practices for finishing your course cleanly and minimizing costs Student Account Setup – Step-by-step account set up for students using AnVIL in your class 2.0.1 Goals for This Guide 2.0.2 Design Philosophy This guide provides an opinionated walkthrough on how to set up AnVIL for your class. These step-by-step instructions take instructors that are completely new to the AnVIL through account setup to the point where you can feel comfortable hosting a class from start-to-finish on AnVIL. Following the recommendations in this guide will help you minimize expenses, develop content programmatically, track individual student expenses, and stop billing expenses from accruing once the class is complete. In support of these goals we have made the following design decisions: ACCOUNT SETUP Sign up for a personal Google Cloud Account, where you can get started by claiming $300 free Google credits. CONTENT DEVELOPING Include version control and visibility of course content by using GitHub. This will allow you to add content programmatically, keep track of changes, and share your content with others outside of AnVIL. CLASS SETUP Create a separate Google Billing Account for each class. This will allow you to easily shut down expenses at the end of the class. Choose one funding source per class (for example, the STRIDES Program). Create separate Terra Billing Projects for each student. This will allow you to monitor billing expenses closely and work with students to build best computing practices. 2.0.3 Before You Start You will need a credit card or bank account to activate your free trial and get started. Don’t worry! You won’t be billed until you explicitly turn on automatic billing, but payment information is needed for verification purposes. Before setting up billing yourself, you may want to check with your institutional procurement office and see if they have a preferred account set-up method with Google (such as a third party reseller or an existing account). "],["account-setup.html", "Chapter 3 Account Setup 3.1 Overview of Account Setup 3.2 Step 1: Create a Google Account 3.3 Step 2: Set Up Google Billing 3.4 Step 3: Add Terra to Google Billing Account 3.5 Step 4: Create a Terra Billing Project 3.6 Step 5: Set Up Alerts 3.7 Step 6: Create First Workspace 3.8 Wrap-Up", " Chapter 3 Account Setup 3.1 Overview of Account Setup 3.2 Step 1: Create a Google Account 3.3 Step 2: Set Up Google Billing 3.4 Step 3: Add Terra to Google Billing Account 3.5 Step 4: Create a Terra Billing Project 3.6 Step 5: Set Up Alerts 3.7 Step 6: Create First Workspace 3.8 Wrap-Up "],["developing-content.html", "Chapter 4 Developing Content 4.1 Overview of Developing Content 4.2 Set Up AnVILPublish on AnVIL 4.3 Create Workspace Structure 4.4 Update Dashboard 4.5 Post Jupyter Notebook 4.6 Push Changes to GitHub", " Chapter 4 Developing Content 4.1 Overview of Developing Content This chapter will show you how to publish a Workspace on AnVIL using RStudio. Publishing Workspaces programmatically makes it easier to incorporate version control (e.g., using git) and ensures that all of your notebook files end up in the Workspace. Much of the information in this section comes from the AnVILPublish vignette, which can serve as an additional reference. 4.1.1 Before You Start You need to set up Billing. This includes your Google Billing Account and Terra Billing Project. Take note of your Terra Billing Project name. Create your first Workspace. A first Workspace is needed to launch RStudio, but after that, all Workspaces can be made programmatically from within other Workspaces. Launch RStudio using the Community-Maintained RStudio Environment. This requires you to be familiar with RStudio on AnVIL. 4.2 Set Up AnVILPublish on AnVIL 4.2.1 Install AnVILPublish Install AnVIL and AnVILPublish. Don’t worry about loading it for now. Tip: hover over the top-right corner of the box below to copy the code. BiocManager::install(&quot;AnVIL&quot;) AnVIL::install(&quot;AnVILPublish&quot;) 4.2.2 Install notedown Next, navigate to the RStudio Terminal and install notedown using pip3. This module converts markdown documents into .ipynb notebooks. pip3 install notedown Return to the RStudio Console. RStudio doesn’t automatically know where to look for notedown. Add the notedown installation to your RStudio PATH: # Add to PATH existing_path &lt;- Sys.getenv(&quot;PATH&quot;) notedown_path &lt;- &quot;/home/rstudio/.local/bin&quot; Sys.setenv(PATH = paste(existing_path, notedown_path, sep = &quot;:&quot;)) Confirm that notedown is ready to use: # Confirm notedown is accessible system2(&quot;notedown&quot;, &quot;--version&quot;) You should see the version number printed to the console: 4.3 Create Workspace Structure 4.3.1 Identify Your Repository You need a folder with content to get started. In the next step, this will be the basic structure of your files: AnVILPublishSkeleton |-DESCRIPTION |-LICENSE.md |-NAMESPACE |-README.md |-vignettes |-Notebook_1.Rmd “AnVILPublishSkeleton” is the name of the folder containing all of your information. The folder must contain a DESCRIPTION file, NAMESPACE file, and a vignettes directory with at least one .Rmd file. As you develop content, you might end up with many .Rmd notebooks inside the vignettes directory. We will practice with a basic set of files that are already set up for you on GitHub. First, you should clone the skeleton repository. git clone https://github.com/avahoffman/AnVILPublishSkeleton You’ll notice it contains a DESCRIPTION file, NAMESPACE file, and a vignettes directory with an .Rmd file. 4.3.2 Changing the DESCRIPTION File Edit the information in DESCRIPTION but keep the structure the same. Package: argument: This “package name” must match the name of the folder containing the DESCRIPTION and other files. In this case, it should be “AnVILPublishSkeleton”. Title: argument: This will become the header for your Workspace’s Dashboard. Authors@R: argument: Your author information and roles. At minimum, you should include a first name, family name, a role, and an email. You can add additional authors and roles as needed. See a more detailed guide to package metadata here. The most common roles are creator (cre), author (aut), and contributor (ctb), but there are many more to choose from if none of these fit the bill. Authors@R: person(given = &quot;Firstname&quot;, family = &quot;Lastname&quot;, role = &quot;cre&quot;, email = &quot;firstnamelastname@gmail.com&quot;) Description: argument: A several-sentence description of the project. 4.3.3 Changing Other Files Do not edit the NAMESPACE file. The README.md file and .Rmd file(s) will be discussed in more detail in Update Dashboard. 4.3.4 Create the Workspace Use the AnVILPublish::as_workspace() function. Replace &lt;billing-project&gt; with the appropriate Terra Billing Project of your choosing. Replace &lt;My-Workspace&gt; with the Workspace name of your choosing. AnVILPublish::as_workspace( path = &quot;/home/rstudio/AnVILPublishSkeleton&quot;, # directory containing DESCRIPTION file namespace = &quot;&lt;billing-project&gt;&quot;, # Billing project name = &quot;&lt;My-Workspace&gt;&quot;, # Actual Workspace name create = TRUE # Makes a *new* Workspace ) You will see output in the console as the function converts the .Rmd to .md. You might get some warning messages, but make sure that the Workspace was created without error: You should now see this new Workspace at https://anvil.terra.bio/#workspaces. 4.4 Update Dashboard Edit the README.md file to add more details to your Workspace Dashboard page. You will use the same function you used to create the Workspace as to update it, with a small change. Instead of create = TRUE you’ll now see an argument update = TRUE. Be very careful to use the correct Workspace name here, so you don’t accidentally overwrite the wrong Workspace. AnVILPublish::as_workspace( path = &quot;/home/rstudio/AnVILPublishSkeleton&quot;, # directory containing DESCRIPTION file namespace = &quot;&lt;billing-project&gt;&quot;, # Billing project name = &quot;&lt;My-Workspace&gt;&quot;, # Actual Workspace name update = TRUE, # Updates the Workspace with your changes use_readme = TRUE # Use README file for Dashboard Description ) You can also click the pencil button next to “ABOUT THE WORKSPACE” to edit the Dashboard manually, but these changes won’t show up later in GitHub. They will also be overwritten by other AnVILPublish updates. 4.5 Post Jupyter Notebook The .Rmd file contains your content. You can make many .Rmd files. These will get turned into .ipynb Jupyter Notebooks when you update using AnVILPublish. After you make changes to your .Rmd files, update the Workspace by running: AnVILPublish::as_workspace( path = &quot;/home/rstudio/AnVILPublishSkeleton&quot;, # directory containing DESCRIPTION file namespace = &quot;&lt;billing-project&gt;&quot;, # Billing project name = &quot;&lt;My-Workspace&gt;&quot;, # Actual Workspace name update = TRUE, # Updates the Workspace with your changes use_readme = TRUE # Use README file for Dashboard Description ) Note that this is the same code used to update the Workspace Dashboard. You can use this exact code to update your workspace any time you save changes in RStudio! 4.6 Push Changes to GitHub Hosting your course’s code on GitHub will ensure that it is reproducible, easy to update, and robust to any tweaks you make. After cloning the skeleton repository, you will need to make a few changes to ensure your content ends up associated with your GitHub account. This means you own it and can make/save changes! Briefly, you should: Create a new repository on GitHub. Don’t add a README.md, .gitignore, or license. Return to RStudio on AnVIL and Initialize your .Rproj. add and commit your changes on AnVIL. rename and add a new origin that points to the new repository you just created. push your changes. Remember that you will need to use a GitHub Personal Token instead of your password. Git can be challenging. Please reach out to our community network at help.anvilproject.org for help. "],["class-setup.html", "Chapter 5 Class Setup 5.1 Identify Funding 5.2 Set Up Billing Project 5.3 Collect Student IDs 5.4 Set Up Permissions 5.5 Notify Terra", " Chapter 5 Class Setup 5.1 Identify Funding 5.1.1 NHGRI STRIDES Through the STRIDES program, NHGRI makes funding available to new users of the AnVIL, in collaboration with the NIH Office of Data Science Strategy. NHGRI currently supports the AnVIL Cloud Credits Program (AC2) and will have a second round of funding available in fall of 2021. 5.2 Set Up Billing Project 5.3 Collect Student IDs 5.4 Set Up Permissions 5.4.1 Create Groups 5.4.2 Add Additional Instructors as “Owner” 5.4.3 Add Students as “Reader” 5.4.4 Set Permissions 5.5 Notify Terra "],["class-ending.html", "Chapter 6 Class Ending 6.1 Notify Students 6.2 Disable Billing", " Chapter 6 Class Ending 6.1 Notify Students 6.2 Disable Billing "],["class-checklist.html", "Chapter 7 Class Checklist", " Chapter 7 Class Checklist This checklist can serve as a reminder of the overall suggested steps to make a new class on AnVIL. You might find yourself changing these steps slightly as you become more familiar with AnVIL. Billing Obtain funding through the STRIDES program (optional) Request students make AnVIL IDs (Google IDs) Collect AnVIL IDs (Google IDs) from students Create Google Billing Account for your class Create Terra Billing Projects for your students Deactivate Billing Projects Resources Create a Workspace for your class Notify Terra of your course dates and times Direct students to the Workspace Permissions Set up Groups to manage permissions AnVIL Group Class Workspace Terra Billing Projects* Instructor Owner Owner Teaching assistants Writer Owner Students Reader User * You should have n + 1 Terra Billing Projects: one for each student and one shared by instructors. "],["student-account-setup.html", "A Student Account Setup", " A Student Account Setup "],["about-the-authors.html", "About the Authors", " About the Authors These credits are based on our course contributors table guidelines. Credits Names Lead Content Instructor Ava Hoffman Template Publishing Engineer Candace Savonen, Carrie Wright Publishing Maintenance Engineer Candace Savonen Technical Publishing Stylist Carrie Wright, Candace Savonen Packages John Muschelli, Candace Savonen, Carrie Wright "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
